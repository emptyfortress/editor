import Vue from 'vue'
import Vuex from 'vuex'

Vue.use(Vuex)

export default new Vuex.Store({
	state: {
		drawer: true,
		mini: false,
		user: 0,
		editMode: false,
		editor: null,
		loading: false,
		edits: [
			{ id: 1, ref: "block1",
				content: `
					<p class="ql-align-center">Договор</p>
					<p>ООО "Трактир Сельская кухня", именуемое - "Исполнитель и/или Ресторан" с одной стороны и ООО "Вокруг света", именуемое далее - "Заказчик", с другой стороны, заключили настоящий договор о нижеследующем: </p>
					<br/>
					<p>Предмет договора</p>
					<ol>
					<li>Согласно настоящему договору Ресторан принимает на себя
					обязанности по организации обедов и ужинов для туристических групп и
					индивидуальных туристов, а Заказчик обязуется оплатить данные услуги.</li>
					<li>Исполнитель обязуется оказать услуги лично.</li>
					<li>Объем услуг по настоящему договору на момент его заключения не определен, и формируется из заявок Заказчика по тарифам, указанным в меню - Приложении № 1.</li>
					</ol>
				`
			},
			{ id: 2, ref: "block2",
				content: `
					<h4>Оплата по договору</h4>
					<ol><li>Оплата услуг по договору производится по ценам, указанным в Приложении № 1, безналичным образом, если стороны не предусмотрят иной способ оплаты.</li><li>Срок оплаты - 7 банковских дней с момента проведения мероприятия при расчете в рублях, 7 банковских дней с момента проведения мероприятия при расчете в иностранной валюте.</li><li>Питание индивидуальных туристов может быть оплачено наличным образом.</li><li>Допускается внесение Заказчиком предварительной оплаты в счет стоимости услуг, которые будут оказаны по настоящему договору в будущем.</li></ol>
				`
			},
			{ id: 3, ref: "block3",
				content: `
					<h4>Ответственность сторон</h4>
					<ol><li>В случае неисполнения или ненадлежащего исполнения Рестораном своих обязательств по настоящему договору, он обязан возместить Заказчику понесенные убытки в рамках действующего гражданского законодательства.</li><li>Заказчик несёт ответственность в следующем объеме:</li><li class="ql-indent-1">в случае, если по вине Заказчика, туристическая группа в ресторан не явилась, Заказчик компенсирует Исполнителю стоимость холодных закусок, указанных в приложении № 1.</li><li class="ql-indent-1">если на обслуживание прибыло меньше туристов, чем было указано в заявке, и о данных изменениях Ресторан не был проинформирован в сроки, указанные в п.2.2.2 настоящего Договора, Заказчик компенсирует разницу в стоимости фактически поставленных, но не потребленных холодных закусок.</li><li>Стороны могут предусмотреть иной способ компенсации убытков по настоящему договору.</li><li>В случае нарушения п.2.2 Договора начисляется пеня в размере ___% с просроченной суммы за каждый день просрочки.</li><li>Уплата пени не освобождает Стороны от выполнения лежащих на них обязательств по Договору.</li></ol>
				`
			},
		],
	},
	getters: {
		drawer: state => { return state.drawer },
		mini: state => { return state.mini },
		user: state => { return state.user },
		editMode: state => { return state.editMode },
		edits: state => { return state.edits },
		editor: state => { return state.editor },
		loading: state => { return state.loading },
	},
	mutations: {
		toggleDrawer (state) { state.drawer = !state.drawer },
		setMini (state, payload) { state.mini = payload },
		setUser (state, payload) { state.user = payload },
		setEditMode (state, payload) { state.editMode = payload },
		toggleEditMode (state) { state.editMode = !state.editMode },
		addEdits (state, payload) {
			state.edits.splice(state.editor, 0, payload)
		},
		deleteEdits (state) {
			state.edits.splice(state.editor - 1, 1)
		},
		setEditor (state, payload) { state.editor = payload },
		setLoading (state) { state.loading = !state.loading },
		updateEdit (state, payload) {
			state.edits[payload.index].content = payload.html
		}
	},
	actions: {
	},
	modules: {
	}
})
